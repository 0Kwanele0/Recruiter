[{"E:\\Code\\Projects\\Recruiter\\client\\pages\\developerprofile\\index.jsx":"1","E:\\Code\\Projects\\Recruiter\\client\\pages\\devs\\index.jsx":"2","E:\\Code\\Projects\\Recruiter\\client\\pages\\index.js":"3","E:\\Code\\Projects\\Recruiter\\client\\pages\\layout.js":"4","E:\\Code\\Projects\\Recruiter\\client\\pages\\login\\index.jsx":"5","E:\\Code\\Projects\\Recruiter\\client\\pages\\profile\\[id].jsx":"6","E:\\Code\\Projects\\Recruiter\\client\\pages\\recruiterpassword\\[id].jsx":"7","E:\\Code\\Projects\\Recruiter\\client\\pages\\recruiterprofile\\index.jsx":"8","E:\\Code\\Projects\\Recruiter\\client\\pages\\register\\index.jsx":"9","E:\\Code\\Projects\\Recruiter\\client\\pages\\resetpassword\\index.jsx":"10","E:\\Code\\Projects\\Recruiter\\client\\pages\\userpassword\\[id].jsx":"11","E:\\Code\\Projects\\Recruiter\\client\\pages\\_app.js":"12","E:\\Code\\Projects\\Recruiter\\client\\components\\EditProfile\\developer\\AddProject.jsx":"13","E:\\Code\\Projects\\Recruiter\\client\\components\\EditProfile\\developer\\DeleteAccount.jsx":"14","E:\\Code\\Projects\\Recruiter\\client\\components\\EditProfile\\developer\\LinksDetails.jsx":"15","E:\\Code\\Projects\\Recruiter\\client\\components\\EditProfile\\developer\\MyProjectsCard.jsx":"16","E:\\Code\\Projects\\Recruiter\\client\\components\\EditProfile\\developer\\PersonalDetails.jsx":"17","E:\\Code\\Projects\\Recruiter\\client\\components\\EditProfile\\developer\\SkillsDetails.jsx":"18","E:\\Code\\Projects\\Recruiter\\client\\components\\EditProfile\\recruiter\\RecruiterDetails.jsx":"19","E:\\Code\\Projects\\Recruiter\\client\\components\\Footer.jsx":"20","E:\\Code\\Projects\\Recruiter\\client\\components\\NavBar.jsx":"21","E:\\Code\\Projects\\Recruiter\\client\\components\\ProfileCard.jsx":"22","E:\\Code\\Projects\\Recruiter\\client\\components\\ProjectCard.jsx":"23"},{"size":9705,"mtime":1652897691513,"results":"24","hashOfConfig":"25"},{"size":4604,"mtime":1652893738765,"results":"26","hashOfConfig":"25"},{"size":4423,"mtime":1652897789194,"results":"27","hashOfConfig":"25"},{"size":319,"mtime":1651668291555,"results":"28","hashOfConfig":"25"},{"size":5521,"mtime":1652897868461,"results":"29","hashOfConfig":"25"},{"size":5924,"mtime":1652897883486,"results":"30","hashOfConfig":"25"},{"size":1899,"mtime":1652897932499,"results":"31","hashOfConfig":"25"},{"size":3292,"mtime":1652893566122,"results":"32","hashOfConfig":"25"},{"size":22374,"mtime":1652898102243,"results":"33","hashOfConfig":"25"},{"size":3907,"mtime":1652898150678,"results":"34","hashOfConfig":"25"},{"size":1856,"mtime":1652898182694,"results":"35","hashOfConfig":"25"},{"size":222,"mtime":1652107812672,"results":"36","hashOfConfig":"25"},{"size":1944,"mtime":1652893792482,"results":"37","hashOfConfig":"25"},{"size":729,"mtime":1652893800337,"results":"38","hashOfConfig":"25"},{"size":3260,"mtime":1652898271447,"results":"39","hashOfConfig":"25"},{"size":1311,"mtime":1652898413162,"results":"40","hashOfConfig":"25"},{"size":4706,"mtime":1652893824676,"results":"41","hashOfConfig":"25"},{"size":4865,"mtime":1652893832623,"results":"42","hashOfConfig":"25"},{"size":3298,"mtime":1652893850892,"results":"43","hashOfConfig":"25"},{"size":206,"mtime":1652706549273,"results":"44","hashOfConfig":"25"},{"size":6099,"mtime":1652893331951,"results":"45","hashOfConfig":"25"},{"size":1896,"mtime":1652868760262,"results":"46","hashOfConfig":"25"},{"size":402,"mtime":1652898290416,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"9vep1l",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Code\\Projects\\Recruiter\\client\\pages\\developerprofile\\index.jsx",["126"],[],"import { useEffect, useRef, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Image from \"next/image\";\r\nimport mystyles from \"../../styles/profile.module.scss\";\r\nimport location from \"../../public/assets/icons/location.png\";\r\nimport pen from \"../../public/assets/icons/pen.png\";\r\nimport plus from \"../../public/assets/icons/plus.png\";\r\nimport close from \"../../public/assets/icons/close.png\";\r\nimport MyProjectsCard from \"../../components/EditProfile/developer/MyProjectsCard\";\r\nimport PersonalDetails from \"../../components/EditProfile/developer/PersonalDetails\";\r\nimport SkillsDetails from \"../../components/EditProfile/developer/SkillsDetails\";\r\nimport LinksDetails from \"../../components/EditProfile/developer/LinksDetails\";\r\nimport DeleteAccount from \"../../components/EditProfile/developer/DeleteAccount\";\r\nimport AddProject from \"../../components/EditProfile/developer/AddProject\";\r\n\r\nfunction MyProfile() {\r\n  const [user, setUser] = useState();\r\n  const [id, setId] = useState();\r\n  const [emailLink, setEmailLink] = useState();\r\n  const [imgLink, setImgLink] = useState();\r\n  const [resumeLink, setResumeLink] = useState();\r\n  const [links, setLinks] = useState([]);\r\n  const profileEditor = useRef();\r\n  const plusBtn = useRef();\r\n  const [editPersonalDetails, setEditPersonalDetails] = useState(true);\r\n  const [editLinks, setEditLinks] = useState(false);\r\n  const [editSkills, setEditSkills] = useState(false);\r\n  const [editProject, setEditProject] = useState(false);\r\n  const [deleteUser, setDeleteUser] = useState(false);\r\n  const [closing, setClosing] = useState(false);\r\n  const [token, setToken] = useState();\r\n  const router = useRouter();\r\n\r\n  function closeProfileEditor() {\r\n    setClosing(!closing);\r\n    profileEditor.current.style.display = \"none\";\r\n  }\r\n\r\n  function openProfileEditor() {\r\n    profileEditor.current.style.display = \"flex\";\r\n  }\r\n\r\n  function showProjectEditor() {\r\n    setEditProject(!editProject);\r\n    if (editProject) {\r\n      plusBtn.current.style.transform = \"rotate(0)\";\r\n    } else {\r\n      plusBtn.current.style.transform = \"rotate(45deg)\";\r\n    }\r\n  }\r\n\r\n  function changeEditMenu(ev) {\r\n    switch (ev.target.innerText) {\r\n      case \"Personal details\":\r\n        setEditLinks(false);\r\n        setEditPersonalDetails(true);\r\n        setEditSkills(false);\r\n        setDeleteUser(false);\r\n        return;\r\n      case \"Links\":\r\n        setEditLinks(true);\r\n        setEditPersonalDetails(false);\r\n        setEditSkills(false);\r\n        setDeleteUser(false);\r\n        return;\r\n      case \"Skills\":\r\n        setEditLinks(false);\r\n        setEditPersonalDetails(false);\r\n        setEditSkills(true);\r\n        setDeleteUser(false);\r\n        return;\r\n      case \"More\":\r\n        setEditLinks(false);\r\n        setEditPersonalDetails(false);\r\n        setEditSkills(false);\r\n        setDeleteUser(true);\r\n        return;\r\n    }\r\n  }\r\n\r\n  async function fetchingUser() {\r\n    const details = localStorage.getItem(\"recruiter-x-auth-token\");\r\n    const token = JSON.parse(details);\r\n    if (token.user.type == \"Developer\") {\r\n      return fetch(`${process.env.SERVER}/user/${token.user._id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"recruiter-x-auth-token\": token.token,\r\n        },\r\n      }).then(async (user) => {\r\n        if (user.status === 200) {\r\n          const data = await user.json();\r\n          setUser(data);\r\n          setEmailLink(`mailto: ${data.email}`);\r\n          setImgLink(`/uploads/profilephotos/${data.profilephoto}`);\r\n          setResumeLink(`/uploads/resumes/${data.myresume}`);\r\n          if (data.links) {\r\n            setLinks(data.links);\r\n          }\r\n        } else {\r\n        }\r\n      });\r\n    } else {\r\n      router.push(\"/recruiterprofile\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"recruiter-x-auth-token\");\r\n    if (token) {\r\n      fetchingUser();\r\n      const parsed = JSON.parse(token);\r\n      setToken(parsed.token);\r\n      setId(parsed.user._id);\r\n    } else {\r\n      router.push(\"/login\");\r\n    }\r\n  }, [id, router, closing]);\r\n\r\n  return (\r\n    <main className={mystyles.wrapper}>\r\n      {user ? (\r\n        <main className={mystyles.container}>\r\n          <div className={mystyles.editProfile}>\r\n            <p>Edit profile</p>\r\n            <div onClick={openProfileEditor} className={mystyles.edit}>\r\n              <Image src={pen} width={20} height={20} alt=\"\" />\r\n            </div>\r\n          </div>\r\n          <section ref={profileEditor} className={mystyles.editor}>\r\n            <div className={mystyles.close}>\r\n              <div onClick={closeProfileEditor} className={mystyles.closeBtn}>\r\n                <Image src={close} width={25} height={25} alt=\"add project\" />\r\n              </div>\r\n            </div>\r\n            <div className={mystyles.menu}>\r\n              <p onClick={changeEditMenu}>Personal details</p>\r\n              <p onClick={changeEditMenu}>Skills</p>\r\n              <p onClick={changeEditMenu}>Links</p>\r\n              <p onClick={changeEditMenu}>More</p>\r\n            </div>\r\n            <>\r\n              {editPersonalDetails && (\r\n                <PersonalDetails user={user} token={token} />\r\n              )}\r\n              {editSkills && <SkillsDetails user={user} token={token} />}\r\n              {editLinks && <LinksDetails user={user} token={token} />}\r\n              {deleteUser && <DeleteAccount user={user} token={token} />}\r\n            </>\r\n          </section>\r\n          <section className={mystyles.profile}>\r\n            <div className={mystyles.name}>\r\n              <div className={mystyles.image}>\r\n                {imgLink && (\r\n                  <Image\r\n                    src={imgLink}\r\n                    objectFit=\"cover\"\r\n                    width={60}\r\n                    height={60}\r\n                    alt=\"\"\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className={mystyles.nameAndLocation}>\r\n                <h3>{user.firstname + \" \" + user.lastname}</h3>\r\n                <div className={mystyles.location}>\r\n                  <Image width={20} height={20} src={location} alt=\"\" />\r\n                  <p>{user.city + \", \" + user.country}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={mystyles.buttons}>\r\n              {user.myresume ? (\r\n                <a className={mystyles.resumelink} href={resumeLink}>\r\n                  Download resume\r\n                </a>\r\n              ) : (\r\n                <button>Upload Resume</button>\r\n              )}\r\n\r\n              <a href={emailLink}>Send Email</a>\r\n            </div>\r\n          </section>\r\n          <section className={mystyles.details}>\r\n            <div className={mystyles.leftSection}>\r\n              <div className={mystyles.skills}>\r\n                <div className={mystyles.heading}>\r\n                  <h4>Skills</h4>\r\n                </div>\r\n                <ul>\r\n                  {user.skills &&\r\n                    user.skills.length > 0 &&\r\n                    user.skills.map((item, index) => {\r\n                      return <li key={index}>{item}</li>;\r\n                    })}\r\n                </ul>\r\n              </div>\r\n              <div className={mystyles.links}>\r\n                <div className={mystyles.heading}>\r\n                  <h4>Links</h4>\r\n                </div>\r\n                <ul>\r\n                  {links &&\r\n                    links.map((item, index) => {\r\n                      if (item.link.length > 0) {\r\n                        return (\r\n                          <a\r\n                            key={index}\r\n                            href={item.link}\r\n                            rel=\"noreferrer\"\r\n                            target=\"_blank\"\r\n                          >\r\n                            <li>{item.name}</li>\r\n                          </a>\r\n                        );\r\n                      }\r\n                    })}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className={mystyles.mainSection}>\r\n              <div className={mystyles.bio}>\r\n                <div className={mystyles.bioHearder}>\r\n                  <h4>{user.category}</h4>\r\n                  <p>Experience: {user.experience ? user.experience : 0}</p>\r\n                </div>\r\n                <p>{user.bio}</p>\r\n              </div>\r\n              <div className={mystyles.projects}>\r\n                <div className={mystyles.heading}>\r\n                  <h4>Projects</h4>\r\n                  <div\r\n                    onClick={showProjectEditor}\r\n                    ref={plusBtn}\r\n                    className={mystyles.edit}\r\n                  >\r\n                    <Image src={plus} width={20} height={20} alt=\"\" />\r\n                  </div>\r\n                </div>\r\n                {editProject && <AddProject user={user} token={token} />}\r\n                <div className={mystyles.projectCards}>\r\n                  {user.projects &&\r\n                    user.projects.map((item, index) => {\r\n                      return (\r\n                        <MyProjectsCard\r\n                          user={user}\r\n                          token={token}\r\n                          key={index}\r\n                          title={item.title}\r\n                          description={item.description}\r\n                          link={item.link}\r\n                        />\r\n                      );\r\n                    })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default MyProfile;\r\n","E:\\Code\\Projects\\Recruiter\\client\\pages\\devs\\index.jsx",["127"],[],"import styles from \"../../styles/devs.module.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ProfileCard from \"../../components/ProfileCard\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nfunction Devs() {\r\n  const router = useRouter();\r\n  const [data, setData] = useState();\r\n  const [filteredData, setFilteredData] = useState();\r\n\r\n  //filter states\r\n  const [country, setCountry] = useState(\"\");\r\n  const [field, setField] = useState(\"\");\r\n\r\n  async function fetchUsers() {\r\n    const details = localStorage.getItem(\"recruiter-x-auth-token\");\r\n    const token = JSON.parse(details);\r\n\r\n    fetch(`${process.env.SERVER}/user/`, {\r\n      method: \"GET\",\r\n    }).then(async (user) => {\r\n      if (user.status === 200) {\r\n        const data = await user.json();\r\n        const filtered = data.filter((item) => {\r\n          if (token) {\r\n            if (item._id !== token.user._id) {\r\n              return item;\r\n            }\r\n            return;\r\n          }\r\n          return item;\r\n        });\r\n        setData(filtered);\r\n      } else {\r\n        router.push(\"/login\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function filterInputsChanging(e) {\r\n    switch (e.target.name) {\r\n      case \"country\":\r\n        setCountry(e.target.value);\r\n        return;\r\n      case \"field\":\r\n        setField(e.target.value);\r\n        return;\r\n    }\r\n  }\r\n\r\n  function filter(e) {\r\n    e.preventDefault();\r\n    const mydata = {\r\n      country,\r\n      field,\r\n    };\r\n    const trimmedCountry = mydata.country.trim();\r\n    const trimmedField = mydata.field.trim();\r\n\r\n    if (trimmedCountry.length > 0) {\r\n      if (trimmedField.length > 0) {\r\n        setFilteredData(\r\n          data.filter((item) => {\r\n            if (item.country == trimmedCountry && item.category == trimmedField)\r\n              return item;\r\n          })\r\n        );\r\n      } else {\r\n        setFilteredData(\r\n          data.filter((item) => {\r\n            if (item.country == trimmedCountry) return item;\r\n          })\r\n        );\r\n      }\r\n    } else if (trimmedField.length > 0) {\r\n      setFilteredData(\r\n        data.filter((item) => {\r\n          if (item.category == trimmedField) return item;\r\n        })\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  function resetFilter() {\r\n    setFilteredData();\r\n    setCountry(\"\");\r\n    setField(\"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {data ? (\r\n        <div className={styles.container}>\r\n          <section className={styles.filter}>\r\n            <form onSubmit={filter} action=\"submit\">\r\n              <input\r\n                value={country}\r\n                onChange={filterInputsChanging}\r\n                name=\"country\"\r\n                placeholder=\"Location\"\r\n                type=\"text\"\r\n              />\r\n              <input\r\n                value={field}\r\n                onChange={filterInputsChanging}\r\n                name=\"field\"\r\n                placeholder=\"Field\"\r\n                type=\"text\"\r\n              />\r\n              <button type=\"submit\">Filter</button>\r\n              <button onClick={resetFilter}>Reset</button>\r\n            </form>\r\n          </section>\r\n          <section className={styles.profiles}>\r\n            {filteredData\r\n              ? filteredData.map((item, key) => {\r\n                  return (\r\n                    <ProfileCard\r\n                      key={key}\r\n                      name={item.firstname + \" \" + item.lastname}\r\n                      id={item._id}\r\n                      photo={item.profilephoto}\r\n                      city={item.city}\r\n                      experience={item.experience}\r\n                      country={item.country}\r\n                      bio={item.bio}\r\n                      skills={item.skills}\r\n                      category={item.category}\r\n                    />\r\n                  );\r\n                })\r\n              : data.map((item, key) => {\r\n                  return (\r\n                    <ProfileCard\r\n                      key={key}\r\n                      name={item.firstname + \" \" + item.lastname}\r\n                      id={item._id}\r\n                      photo={item.profilephoto}\r\n                      city={item.city}\r\n                      experience={item.experience}\r\n                      country={item.country}\r\n                      bio={item.bio}\r\n                      skills={item.skills}\r\n                      category={item.category}\r\n                    />\r\n                  );\r\n                })}\r\n          </section>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Devs;\r\n","E:\\Code\\Projects\\Recruiter\\client\\pages\\index.js",[],[],"E:\\Code\\Projects\\Recruiter\\client\\pages\\layout.js",[],[],"E:\\Code\\Projects\\Recruiter\\client\\pages\\login\\index.jsx",["128"],[],"import styles from \"../../styles/login.module.scss\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nfunction Login() {\r\n  const router = useRouter();\r\n  const [notLoggedIn, setNotLoggedIn] = useState(false);\r\n  const [responseError, setRecponseError] = useState();\r\n  const [recruiterCheckbox, setRecruiterCheckbox] = useState(false);\r\n  const [developerCheckbox, setDeveloperCheckbox] = useState(false);\r\n  const [checkboxError, setCheckboxError] = useState(false);\r\n  const recruiterBox = useRef();\r\n  const developerBox = useRef();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  function labelClicked(e) {\r\n    switch (e.target.innerText) {\r\n      case \"Developer\":\r\n        setDeveloperCheckbox(true);\r\n        setRecruiterCheckbox(false);\r\n        recruiterBox.current.style.backgroundColor = \"white\";\r\n        developerBox.current.style.backgroundColor = \"#2fe032\";\r\n        return;\r\n      case \"Recruiter\":\r\n        setRecruiterCheckbox(true);\r\n        setDeveloperCheckbox(false);\r\n        recruiterBox.current.style.backgroundColor = \"#2fe032\";\r\n        developerBox.current.style.backgroundColor = \"white\";\r\n        return;\r\n    }\r\n  }\r\n\r\n  function recboxClicked(e) {\r\n    setRecruiterCheckbox(true);\r\n    setDeveloperCheckbox(false);\r\n    recruiterBox.current.style.backgroundColor = \"#2fe032\";\r\n    developerBox.current.style.backgroundColor = \"white\";\r\n    return;\r\n  }\r\n\r\n  function devboxClicked(e) {\r\n    setDeveloperCheckbox(true);\r\n    setRecruiterCheckbox(false);\r\n    recruiterBox.current.style.backgroundColor = \"white\";\r\n    developerBox.current.style.backgroundColor = \"#2fe032\";\r\n    return;\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    if (developerCheckbox) {\r\n      fetch(`${process.env.SERVER}/user/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data),\r\n      }).then(async (data) => {\r\n        const response = await data.json();\r\n        if (data.status == 200) {\r\n          localStorage.setItem(\r\n            \"recruiter-x-auth-token\",\r\n            JSON.stringify(response)\r\n          );\r\n          router.push(\"/devs\");\r\n          setRecponseError();\r\n        } else {\r\n          setRecponseError(response.msg);\r\n        }\r\n      });\r\n    } else if (recruiterCheckbox) {\r\n      fetch(`${process.env.SERVER}/recruiter/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"Application/json\" },\r\n        body: JSON.stringify(data),\r\n      }).then(async (data) => {\r\n        const response = await data.json();\r\n        if (data.status == 200) {\r\n          localStorage.setItem(\r\n            \"recruiter-x-auth-token\",\r\n            JSON.stringify(response)\r\n          );\r\n          setRecponseError();\r\n          router.push(\"/devs\");\r\n        } else {\r\n          setRecponseError(response.msg);\r\n        }\r\n      });\r\n    } else {\r\n      setCheckboxError(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"recruiter-x-auth-token\");\r\n    if (token) {\r\n      router.reload();\r\n      router.push(\"/devs\");\r\n    } else {\r\n      setNotLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {notLoggedIn ? (\r\n        <div className={styles.container}>\r\n          <form onSubmit={handleSubmit(onSubmit)} action=\"submit\">\r\n            <h3>Hey! welcome back!</h3>\r\n            <input\r\n              {...register(\"email\", { required: true })}\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n            />\r\n            {errors.email?.type === \"required\" && (\r\n              <small>Email is required</small>\r\n            )}\r\n            <input\r\n              {...register(\"password\", { required: true })}\r\n              placeholder=\"Password\"\r\n              type=\"text\"\r\n            />\r\n            {errors.password?.type === \"required\" && (\r\n              <small>Password is required</small>\r\n            )}\r\n            <div className={styles.recOrDev}>\r\n              <p>Are you a Develper or a recruiter?</p>\r\n              <div className={styles.checkboxContainer}>\r\n                <div className={styles.checkbox}>\r\n                  <div\r\n                    onClick={recboxClicked}\r\n                    ref={recruiterBox}\r\n                    className={styles.check}\r\n                  ></div>\r\n                  <p onClick={labelClicked}>Recruiter</p>\r\n                </div>\r\n                <div className={styles.checkbox}>\r\n                  <div\r\n                    onClick={devboxClicked}\r\n                    ref={developerBox}\r\n                    className={styles.check}\r\n                  ></div>\r\n                  <p onClick={labelClicked}>Developer</p>\r\n                </div>\r\n              </div>\r\n              {checkboxError ? <small>Please select one!</small> : null}\r\n            </div>\r\n            <button type=\"submit\">Login</button>\r\n            {responseError ? <small>{responseError}</small> : null}\r\n\r\n            <Link href=\"/resetpassword\">Forgot password?</Link>\r\n\r\n            <p className={styles.referParagraph}>\r\n              You don`&apos;`t have an account?{\" \"}\r\n              <span>\r\n                <Link href=\"/register\">Register here</Link>\r\n              </span>\r\n              !\r\n            </p>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","E:\\Code\\Projects\\Recruiter\\client\\pages\\profile\\[id].jsx",["129"],[],"import { useEffect, useState } from \"react\";\r\nimport Image from \"next/image\";\r\nimport { useRouter } from \"next/router\";\r\nimport mystyles from \"../../styles/profile.module.scss\";\r\nimport location from \"../../public/assets/icons/location.png\";\r\nimport ProjectCard from \"../../components/ProjectCard\";\r\n\r\nfunction Profile() {\r\n  const [user, setUser] = useState();\r\n  const [id, setId] = useState();\r\n  const [emailLink, setEmailLink] = useState();\r\n  const [imgLink, setImgLink] = useState();\r\n  const [links, setLinks] = useState([]);\r\n  const router = useRouter();\r\n  const [resumeLink, setResumeLink] = useState();\r\n  const [linksCount, setLinksCount] = useState(0);\r\n\r\n  async function fetchingUser() {\r\n    setLinksCount(0);\r\n    const details = localStorage.getItem(\"recruiter-x-auth-token\");\r\n    const token = JSON.parse(details);\r\n    return fetch(`${process.env.SERVER}/user/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"recruiter-x-auth-token\": token.token,\r\n      },\r\n    }).then(async (user) => {\r\n      if (user.status === 200) {\r\n        const data = await user.json();\r\n        setUser(data);\r\n        setEmailLink(`mailto: ${data.email}`);\r\n        setImgLink(`/uploads/profilephotos/${data.profilephoto}`);\r\n        setResumeLink(`/uploads/resumes/${data.myresume}`);\r\n        if (data.links) {\r\n          setLinks(data.links);\r\n          let mylist = data.links;\r\n          mylist.map((item) => {\r\n            if (item.link.length > 1) {\r\n            } else {\r\n              setLinksCount(linksCount + 1);\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setId(router.query.id);\r\n    const token = localStorage.getItem(\"recruiter-x-auth-token\");\r\n    if (token) {\r\n      fetchingUser();\r\n    } else {\r\n      router.push(\"/login\");\r\n    }\r\n  }, [id, router]);\r\n\r\n  return (\r\n    <main className={mystyles.wrapper}>\r\n      {user ? (\r\n        <main className={mystyles.container}>\r\n          <section className={mystyles.profile}>\r\n            <div className={mystyles.name}>\r\n              <div className={mystyles.image}>\r\n                {imgLink && (\r\n                  <Image\r\n                    src={imgLink}\r\n                    objectFit=\"cover\"\r\n                    width={60}\r\n                    height={60}\r\n                    alt=\"\"\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className={mystyles.nameAndLocation}>\r\n                <h3>{user.firstname + \" \" + user.lastname}</h3>\r\n                <div className={mystyles.location}>\r\n                  <Image width={20} height={20} src={location} alt=\"\" />\r\n                  <p>{user.city + \", \" + user.country}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={mystyles.buttons}>\r\n              {user.myresume ? (\r\n                <a className={mystyles.resumelink} href={resumeLink}>\r\n                  Download resume\r\n                </a>\r\n              ) : null}\r\n              <a href={emailLink}>Send Email</a>\r\n            </div>\r\n          </section>\r\n          <section className={mystyles.details}>\r\n            <div className={mystyles.leftSection}>\r\n              <div className={mystyles.skills}>\r\n                <div className={mystyles.heading}>\r\n                  <h4>Skills</h4>\r\n                </div>\r\n                <ul>\r\n                  {user.skills &&\r\n                    user.skills.length > 0 &&\r\n                    user.skills.map((item, index) => {\r\n                      return <li key={index}>{item}</li>;\r\n                    })}\r\n                </ul>\r\n              </div>\r\n              <div className={mystyles.links}>\r\n                <div className={mystyles.heading}>\r\n                  <h4>Links</h4>\r\n                </div>\r\n                <ul>\r\n                  {links && linksCount === 4 ? (\r\n                    <p>No links</p>\r\n                  ) : (\r\n                    links.map((item, index) => {\r\n                      if (item.link.length > 0) {\r\n                        return (\r\n                          <a\r\n                            key={index}\r\n                            href={item.link}\r\n                            rel=\"noreferrer\"\r\n                            target=\"_blank\"\r\n                          >\r\n                            <li>{item.name}</li>\r\n                          </a>\r\n                        );\r\n                      }\r\n                    })\r\n                  )}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className={mystyles.mainSection}>\r\n              <div className={mystyles.bio}>\r\n                <div className={mystyles.bioHearder}>\r\n                  <h4>{user.category}</h4>\r\n                  <p>Experience: {user.experience ? user.experience : 0}</p>\r\n                </div>\r\n                <p>{user.bio}</p>\r\n              </div>\r\n              <div className={mystyles.projects}>\r\n                <div className={mystyles.heading}>\r\n                  <h4>Projects</h4>\r\n                </div>\r\n                <div className={mystyles.projectCards}>\r\n                  {user.projects && user.projects.length > 0 ? (\r\n                    user.projects.map((item, index) => {\r\n                      return (\r\n                        <ProjectCard\r\n                          key={index}\r\n                          title={item.title}\r\n                          description={item.description}\r\n                          link={item.link}\r\n                        />\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <p>No projects</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","E:\\Code\\Projects\\Recruiter\\client\\pages\\recruiterpassword\\[id].jsx",[],[],"E:\\Code\\Projects\\Recruiter\\client\\pages\\recruiterprofile\\index.jsx",["130"],[],"import { useEffect, useRef, useState } from \"react\";\r\nimport Image from \"next/image\";\r\nimport { useRouter } from \"next/router\";\r\nimport styles from \"../../styles/recruiterProfile.module.scss\";\r\nimport location from \"../../public/assets/icons/location.png\";\r\nimport close from \"../../public/assets/icons/close.png\";\r\nimport RecruiterDetails from \"../../components/EditProfile//recruiter/RecruiterDetails\";\r\n\r\nfunction MyProfile() {\r\n  const [user, setUser] = useState();\r\n  const [id, setId] = useState();\r\n  const profileEditorCard = useRef();\r\n  const [closing, setClosing] = useState(false);\r\n  const [token, setToken] = useState();\r\n  const router = useRouter();\r\n\r\n  function closeEditor() {\r\n    setClosing(!closing);\r\n    profileEditorCard.current.style.display = \"none\";\r\n  }\r\n\r\n  function openEditor() {\r\n    profileEditorCard.current.style.display = \"flex\";\r\n  }\r\n\r\n  async function fetchingUser() {\r\n    const details = localStorage.getItem(\"recruiter-x-auth-token\");\r\n    const token = JSON.parse(details);\r\n    if (token.user.type == \"Recruiter\") {\r\n      return fetch(`${process.env.SERVER}/recruiter/${token.user._id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"recruiter-x-auth-token\": token.token,\r\n        },\r\n      }).then(async (user) => {\r\n        if (user.status === 200) {\r\n          const data = await user.json();\r\n          setUser(data);\r\n          if (data.links) {\r\n          }\r\n        } else {\r\n        }\r\n      });\r\n    } else {\r\n      router.push(\"/developerprofile\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"recruiter-x-auth-token\");\r\n    if (token) {\r\n      fetchingUser();\r\n      const parsed = JSON.parse(token);\r\n      setToken(parsed.token);\r\n      setId(parsed.user._id);\r\n    } else {\r\n      router.push(\"/login\");\r\n    }\r\n  }, [id, router, closing]);\r\n\r\n  return (\r\n    <main className={styles.wrapper}>\r\n      {user ? (\r\n        <main className={styles.container}>\r\n          <section ref={profileEditorCard} className={styles.editor}>\r\n            <div className={styles.close}>\r\n              <div onClick={closeEditor} className={styles.closeBtn}>\r\n                <Image src={close} width={25} height={25} alt=\"add project\" />\r\n              </div>\r\n            </div>\r\n            <>\r\n              <RecruiterDetails user={user} token={token} />\r\n            </>\r\n          </section>\r\n          <section className={styles.profile}>\r\n            <div className={styles.name}>\r\n              <h3>{user.firstname + \" \" + user.lastname}</h3>\r\n              <div className={styles.location}>\r\n                <Image width={20} height={20} src={location} alt=\"\" />\r\n                <p>{user.city + \", \" + user.country}</p>\r\n              </div>\r\n            </div>\r\n            <div className={styles.buttons}>\r\n              <button onClick={openEditor}>Edit profile</button>\r\n            </div>\r\n          </section>\r\n          <section className={styles.details}>\r\n            <div className={styles.mainSection}>\r\n              <h4>Recruiter</h4>\r\n              <p>Enjoy your search for talent</p>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default MyProfile;\r\n","E:\\Code\\Projects\\Recruiter\\client\\pages\\register\\index.jsx",["131"],[],"import regstyles from \"../../styles/register.module.scss\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport twitter from \"../../public/assets/icons/twitter.png\";\r\nimport github from \"../../public/assets/icons/github.png\";\r\nimport linkedin from \"../../public/assets/icons/linkedin.png\";\r\nimport internet from \"../../public/assets/icons/internet.png\";\r\nimport avater from \"../../public/assets/icons/avatar.png\";\r\nimport file from \"../../public/assets/icons/file.png\";\r\nimport plus from \"../../public/assets/icons/plus.png\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { useRouter } from \"next/router\";\r\nimport { listedCategories, experienceList } from \"../../data/Lists\";\r\nimport { Countries } from \"../../data/Countries\";\r\n\r\nfunction Index() {\r\n  const router = useRouter();\r\n  const [notLoggedIn, setNotLoggedIn] = useState(false);\r\n  const [registering, setRegistering] = useState(true);\r\n  const [details, setdetails] = useState(false);\r\n  const [links, setlinks] = useState(false);\r\n  const [user, setUser] = useState();\r\n  const [token, setToken] = useState();\r\n\r\n  //register state\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confPassword, setConfPassword] = useState(\"\");\r\n  const [responseError, setRecponseError] = useState();\r\n  const [country, setCountry] = useState(\"\");\r\n  const [displayCountries, setDisplayCountries] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  //details states\r\n  const experience = useRef();\r\n  const fieldList = useRef();\r\n  const [fieldlist, setFieldList] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState();\r\n  const [selectedExperience, setSelectedExperience] = useState();\r\n  const [skills, setSkills] = useState([]);\r\n  const [bio, setBio] = useState(\"\");\r\n  const [detailsError, setDetailsError] = useState();\r\n\r\n  //links\r\n  const [exlist, setExList] = useState(false);\r\n  const [githubLink, setGithubLink] = useState(\"\");\r\n  const [twitterLink, setTwitterLink] = useState(\"\");\r\n  const [linkedinLink, setLinkedinLink] = useState(\"\");\r\n  const [portfolioLink, setPortfolioLink] = useState(\"\");\r\n  const [imageLink, setImageLink] = useState(\"\");\r\n  const [resume, setResume] = useState(\"\");\r\n  const [detailsResponseError, setDetailsResponseError] = useState();\r\n  const [typedSkill, setTypedSkill] = useState(\"\");\r\n  const [linksResponseError, setLinksResponseError] = useState();\r\n\r\n  //details methods\r\n  function changeTypedSkill(e) {\r\n    setTypedSkill(e.target.value);\r\n  }\r\n  function addSkill(e) {\r\n    e.preventDefault();\r\n    const str = typedSkill.trim();\r\n    if (str.length > 0) {\r\n      if (!skills.includes(str)) {\r\n        setSkills([...skills, typedSkill]);\r\n        setTypedSkill(\"\");\r\n      }\r\n    }\r\n    setTypedSkill(\"\");\r\n  }\r\n\r\n  function removeSkill(ev) {\r\n    setSkills(\r\n      skills.filter((e) => {\r\n        if (e != ev.target.innerText) {\r\n          return e;\r\n        }\r\n      })\r\n    );\r\n  }\r\n  function showFieldList() {\r\n    setFieldList(!fieldlist);\r\n  }\r\n  function addCategory(ev) {\r\n    setSelectedCategory(ev.target.innerText);\r\n    showFieldList();\r\n  }\r\n  function addExperience(ev) {\r\n    setSelectedExperience(ev.target.innerText);\r\n    showExList();\r\n  }\r\n  function showExList() {\r\n    setExList(!exlist);\r\n  }\r\n  function changeBio(e) {\r\n    setBio(e.target.value);\r\n  }\r\n  //links methods\r\n  function changeLink(e) {\r\n    switch (e.target.name) {\r\n      case \"github\":\r\n        setGithubLink(e.target.value);\r\n        return;\r\n      case \"linkedin\":\r\n        setLinkedinLink(e.target.value);\r\n        return;\r\n      case \"twitter\":\r\n        setTwitterLink(e.target.value);\r\n        return;\r\n      case \"portfolio\":\r\n        setPortfolioLink(e.target.value);\r\n        return;\r\n    }\r\n  }\r\n  function changeImage(e) {\r\n    setImageLink(e.target.files[0]);\r\n  }\r\n  function changeResume(e) {\r\n    setResume(e.target.files[0]);\r\n  }\r\n\r\n  //register methods\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  function registerPassword(e) {\r\n    setPassword(e.target.value);\r\n  }\r\n  function checkPassword(e) {\r\n    setConfPassword(e.target.value);\r\n    if (password !== confPassword) {\r\n      setError(true);\r\n    }\r\n    setError(false);\r\n  }\r\n\r\n  const [recruiterCheckbox, setRecruiterCheckbox] = useState(false);\r\n  const [developerCheckbox, setDeveloperCheckbox] = useState(false);\r\n  const [checkboxError, setCheckboxError] = useState(false);\r\n  const recruiterBox = useRef();\r\n  const developerBox = useRef();\r\n\r\n  function labelClicked(e) {\r\n    switch (e.target.innerText) {\r\n      case \"Developer\":\r\n        setDeveloperCheckbox(true);\r\n        setRecruiterCheckbox(false);\r\n        recruiterBox.current.style.backgroundColor = \"white\";\r\n        developerBox.current.style.backgroundColor = \"#2fe032\";\r\n        return;\r\n      case \"Recruiter\":\r\n        setRecruiterCheckbox(true);\r\n        setDeveloperCheckbox(false);\r\n        recruiterBox.current.style.backgroundColor = \"#2fe032\";\r\n        developerBox.current.style.backgroundColor = \"white\";\r\n        return;\r\n    }\r\n  }\r\n  function recboxClicked(e) {\r\n    setRecruiterCheckbox(true);\r\n    setDeveloperCheckbox(false);\r\n    recruiterBox.current.style.backgroundColor = \"#2fe032\";\r\n    developerBox.current.style.backgroundColor = \"white\";\r\n    return;\r\n  }\r\n  function devboxClicked(e) {\r\n    setDeveloperCheckbox(true);\r\n    setRecruiterCheckbox(false);\r\n    recruiterBox.current.style.backgroundColor = \"white\";\r\n    developerBox.current.style.backgroundColor = \"#2fe032\";\r\n    return;\r\n  }\r\n\r\n  function CountrySelected(e) {\r\n    setCountry(e.target.innerText);\r\n    setDisplayCountries(false);\r\n  }\r\n\r\n  function submitDetails(e) {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      selectedCategory &&\r\n      selectedExperience &&\r\n      skills.length > 0 &&\r\n      bio.trim().length > 0\r\n    ) {\r\n      const data = {\r\n        skills: skills,\r\n        bio: bio,\r\n        category: selectedCategory,\r\n        experience: selectedExperience,\r\n      };\r\n\r\n      fetch(`${process.env.SERVER}/user/details/${user.user._id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"recruiter-x-auth-token\": token,\r\n        },\r\n        body: JSON.stringify(data),\r\n      }).then(async (data) => {\r\n        const response = await data.json();\r\n        if (data.status == 200) {\r\n          setDetailsError();\r\n          setRegistering(false);\r\n          setdetails(false);\r\n          setlinks(true);\r\n        } else if (data.status == 401) {\r\n          setDetailsError(\"kaka\");\r\n        } else {\r\n          setDetailsError(\"kaka\");\r\n        }\r\n      });\r\n    } else {\r\n      setDetailsError(\"all fields should be complete.\");\r\n    }\r\n  }\r\n\r\n  function submitLinks(e) {\r\n    e.preventDefault();\r\n\r\n    const links = [\r\n      { name: \"GitHub\", link: githubLink },\r\n      { name: \"Twitter\", link: twitterLink },\r\n      { name: \"LinkeIn\", link: linkedinLink },\r\n      { name: \"Portfolio\", link: portfolioLink },\r\n    ];\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"profilephoto\", imageLink);\r\n    formData.append(\"resume\", resume);\r\n    formData.append(\"links\", JSON.stringify(links));\r\n    console.log(formData);\r\n    fetch(`${process.env.SERVER}/user/links/${user.user._id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"recruiter-x-auth-token\": token,\r\n      },\r\n      body: formData,\r\n    }).then(async (data) => {\r\n      const response = await data.json();\r\n      if (data.status == 200) {\r\n        router.push(\"/devs\");\r\n        router.reload();\r\n      } else if (data.status == 401) {\r\n      } else {\r\n      }\r\n    });\r\n  }\r\n\r\n  async function registerUser(data) {\r\n    data.country = country;\r\n    if (developerCheckbox) {\r\n      fetch(`${process.env.SERVER}/user/register`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data),\r\n      }).then(async (data) => {\r\n        const response = await data.json();\r\n        if (data.status == 200) {\r\n          setRecponseError();\r\n          setUser(response);\r\n          setToken(response.token);\r\n          localStorage.setItem(\r\n            \"recruiter-x-auth-token\",\r\n            JSON.stringify(response)\r\n          );\r\n          setRegistering(false);\r\n          setdetails(true);\r\n          setlinks(false);\r\n        } else if (data.status == 401) {\r\n          setRecponseError(response.msg);\r\n        } else {\r\n          setRecponseError(response.msg);\r\n        }\r\n      });\r\n    } else if (recruiterCheckbox) {\r\n      fetch(`${process.env.SERVER}/recruiter/register`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data),\r\n      }).then(async (data) => {\r\n        const response = await data.json();\r\n        if (data.status == 200) {\r\n          setRecponseError();\r\n          setUser(response);\r\n          localStorage.setItem(\r\n            \"recruiter-x-auth-token\",\r\n            JSON.stringify(response)\r\n          );\r\n          router.reload();\r\n          router.push(\"/devs\");\r\n        } else if (data.status == 401) {\r\n          setRecponseError(response.msg);\r\n        } else {\r\n          setRecponseError(response.msg);\r\n        }\r\n      });\r\n    } else {\r\n      setCheckboxError(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"recruiter-x-auth-token\");\r\n    if (token) {\r\n      router.push(\"/developerprofile\");\r\n    } else {\r\n      setNotLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {notLoggedIn ? (\r\n        <div className={regstyles.container}>\r\n          <div className={regstyles.formsContainer}>\r\n            {registering && (\r\n              <form\r\n                onSubmit={handleSubmit(registerUser)}\r\n                className={regstyles.register}\r\n              >\r\n                <div className={regstyles.names}>\r\n                  <div className={regstyles.inputContainer}>\r\n                    <input\r\n                      {...register(\"firstname\", {\r\n                        required: \"Firstname is required\",\r\n                      })}\r\n                      type=\"text\"\r\n                      placeholder=\"Firstname\"\r\n                    />\r\n                    {errors.firstname && (\r\n                      <span>{errors.firstname.message}</span>\r\n                    )}\r\n                  </div>\r\n                  <div className={regstyles.inputContainer}>\r\n                    <input\r\n                      {...register(\"lastname\", {\r\n                        required: \"Lastname is required\",\r\n                      })}\r\n                      type=\"text\"\r\n                      placeholder=\"Lastname\"\r\n                    />\r\n                    {errors.lastname && <span>{errors.lastname.message}</span>}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    {...register(\"email\", {\r\n                      required: \"Email is required\",\r\n                      pattern: /[a-z0-9]+@[a-z]+.[a-z]{2,3}/,\r\n                    })}\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                  {errors.email && <span>{errors.email.message}</span>}\r\n                  {errors.email?.type == \"pattern\" && (\r\n                    <span>Invalid Email</span>\r\n                  )}\r\n                </div>\r\n                <div className={regstyles.countries}>\r\n                  <div className={regstyles.inputContainer}>\r\n                    <input\r\n                      onClick={() => setDisplayCountries(!displayCountries)}\r\n                      value={country}\r\n                      type=\"text\"\r\n                      placeholder=\"Country\"\r\n                      required={true}\r\n                      onChange={() => {\r\n                        null;\r\n                      }}\r\n                    />\r\n                    {errors.country && <span>{errors.country.message}</span>}\r\n                    {displayCountries && (\r\n                      <ul>\r\n                        {Countries.map((item, index) => {\r\n                          return (\r\n                            <li onClick={CountrySelected} key={index}>\r\n                              {item.name}\r\n                            </li>\r\n                          );\r\n                        })}\r\n                      </ul>\r\n                    )}\r\n                  </div>\r\n                  <div className={regstyles.inputContainer}>\r\n                    <input\r\n                      {...register(\"city\", { required: \"City is required\" })}\r\n                      type=\"text\"\r\n                      placeholder=\"City\"\r\n                    />\r\n                    {errors.city && <span>{errors.city.message}</span>}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    {...register(\"password\", {\r\n                      required: \"Password is required\",\r\n                    })}\r\n                    type=\"text\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={registerPassword}\r\n                  />\r\n                  {errors.password && <span>{errors.password.message}</span>}\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    {...register(\"confirm_password\", {\r\n                      required: \"Please confirm password\",\r\n                    })}\r\n                    value={confPassword}\r\n                    onChange={checkPassword}\r\n                    type=\"text\"\r\n                    placeholder=\"Confirm password\"\r\n                  />\r\n                  {errors.confirm_password && (\r\n                    <span>{errors.confirm_password.message}</span>\r\n                  )}\r\n                </div>\r\n                <div className={regstyles.recOrDev}>\r\n                  <p>Are you a Develper or a recruiter?</p>\r\n                  <div className={regstyles.checkboxContainer}>\r\n                    <div className={regstyles.checkbox}>\r\n                      <div\r\n                        onClick={recboxClicked}\r\n                        ref={recruiterBox}\r\n                        className={regstyles.check}\r\n                      ></div>\r\n                      <p onClick={labelClicked}>Recruiter</p>\r\n                    </div>\r\n                    <div className={regstyles.checkbox}>\r\n                      <div\r\n                        onClick={devboxClicked}\r\n                        ref={developerBox}\r\n                        className={regstyles.check}\r\n                      ></div>\r\n                      <p onClick={labelClicked}>Developer</p>\r\n                    </div>\r\n                  </div>\r\n                  {checkboxError ? <small>Please select one!</small> : null}\r\n                </div>\r\n                {responseError ? <small>{responseError}</small> : null}\r\n                {error ? <small>Passwords don`&apos;`t match!</small> : null}\r\n                <button type=\"submit\">\r\n                  {developerCheckbox ? \"Next\" : \"Register\"}{\" \"}\r\n                </button>\r\n              </form>\r\n            )}\r\n            {details && (\r\n              <form onSubmit={submitDetails} className={regstyles.about}>\r\n                <div className={regstyles.field}>\r\n                  <div onClick={showFieldList} className={regstyles.inner}>\r\n                    {selectedCategory ? (\r\n                      <p className={regstyles.category}>{selectedCategory}</p>\r\n                    ) : (\r\n                      <p>\r\n                        Select Field <span>e.g Web Developer..</span>\r\n                      </p>\r\n                    )}\r\n                    <Image src={plus} width={20} height={20} alt=\"plus\" />\r\n                  </div>\r\n                  {fieldlist && (\r\n                    <div ref={fieldList} className={regstyles.list}>\r\n                      <ul>\r\n                        {listedCategories.map((item, index) => {\r\n                          return (\r\n                            <li key={index} onClick={addCategory}>\r\n                              {item}\r\n                            </li>\r\n                          );\r\n                        })}\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className={regstyles.skillsfield}>\r\n                  <input\r\n                    value={typedSkill}\r\n                    onChange={changeTypedSkill}\r\n                    placeholder=\"Type your skills e.g JavaScript, React js\"\r\n                    type=\"text\"\r\n                  />\r\n                  <button onClick={addSkill}>add</button>\r\n                </div>\r\n                {skills.length > 0 && (\r\n                  <ul className={regstyles.skillList}>\r\n                    {skills.map((item, index) => {\r\n                      return (\r\n                        <li key={index} onClick={removeSkill}>\r\n                          {item}\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                )}\r\n                <div className={regstyles.field}>\r\n                  <div onClick={showExList} className={regstyles.inner}>\r\n                    {selectedExperience ? (\r\n                      <p className={regstyles.selectedExperience}>\r\n                        {selectedExperience}\r\n                      </p>\r\n                    ) : (\r\n                      <p>\r\n                        Experience <span>e.g 3 Years..</span>\r\n                      </p>\r\n                    )}\r\n                    <Image src={plus} width={20} height={20} alt=\"plus\" />\r\n                  </div>\r\n                  {exlist && (\r\n                    <div ref={experience} className={regstyles.list}>\r\n                      <ul>\r\n                        {experienceList.map((item, index) => {\r\n                          return (\r\n                            <li key={index} onClick={addExperience}>\r\n                              {item}\r\n                            </li>\r\n                          );\r\n                        })}\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <textarea\r\n                  placeholder=\"Tell us a little about yourself..\"\r\n                  name=\"bio\"\r\n                  onChange={changeBio}\r\n                  value={bio}\r\n                  id=\"\"\r\n                  rows=\"4\"\r\n                  required={true}\r\n                ></textarea>\r\n                {detailsError ? <small>{detailsError}</small> : null}\r\n                <button type=\"submit\">Next</button>\r\n                {detailsResponseError ? (\r\n                  <small>{detailsResponseError}</small>\r\n                ) : null}\r\n              </form>\r\n            )}\r\n            {links && (\r\n              <form\r\n                onSubmit={submitLinks}\r\n                encType=\"multipart/form-data\"\r\n                className={regstyles.links}\r\n              >\r\n                <div className={regstyles.file}>\r\n                  <Image src={avater} width={40} height={40} alt=\"avatar\" />\r\n                  <label>Upload a profile pic</label>\r\n                  <input\r\n                    onChange={changeImage}\r\n                    name=\"profilephoto\"\r\n                    id=\"profilephoto\"\r\n                    // required={true}\r\n                    accept=\".png, .jpg, .jpeg\"\r\n                    type=\"file\"\r\n                  />\r\n                </div>\r\n                <div className={regstyles.file}>\r\n                  <Image src={file} width={40} height={40} alt=\"file\" />\r\n                  <label>Upload Your Resume</label>\r\n                  <input\r\n                    onChange={changeResume}\r\n                    name=\"resume\"\r\n                    id=\"resume\"\r\n                    // required={true}\r\n                    accept=\".pdf, .docx\"\r\n                    type=\"file\"\r\n                  />\r\n                </div>\r\n                <div className={regstyles.skillsfield}>\r\n                  <Image src={github} width={30} height={30} alt=\"github\" />\r\n                  <input\r\n                    value={githubLink}\r\n                    onChange={changeLink}\r\n                    name=\"github\"\r\n                    placeholder=\"Add you GitHub Link\"\r\n                    type=\"text\"\r\n                  />\r\n                </div>\r\n                <div className={regstyles.skillsfield}>\r\n                  <Image src={linkedin} width={30} height={30} alt=\"linkedin\" />\r\n                  <input\r\n                    value={linkedinLink}\r\n                    onChange={changeLink}\r\n                    name=\"linkedin\"\r\n                    placeholder=\"Add you LinkedIn Link\"\r\n                    type=\"text\"\r\n                  />\r\n                </div>\r\n                <div className={regstyles.skillsfield}>\r\n                  <Image src={twitter} width={30} height={30} alt=\"twitter\" />\r\n                  <input\r\n                    value={twitterLink}\r\n                    onChange={changeLink}\r\n                    name=\"twitter\"\r\n                    placeholder=\"Add you Twitter Link\"\r\n                    type=\"text\"\r\n                  />\r\n                </div>\r\n                <div className={regstyles.skillsfield}>\r\n                  <Image src={internet} width={30} height={30} alt=\"internet\" />\r\n                  <input\r\n                    value={portfolioLink}\r\n                    onChange={changeLink}\r\n                    name=\"portfolio\"\r\n                    placeholder=\"Add your Portfolio Link\"\r\n                    type=\"text\"\r\n                  />\r\n                </div>\r\n                <button type=\"submit\">Submit</button>\r\n                {linksResponseError ? (\r\n                  <small>{linksResponseError}</small>\r\n                ) : null}\r\n              </form>\r\n            )}\r\n            <p className={regstyles.referParagraph}>\r\n              You already have an account?{\" \"}\r\n              <span>\r\n                <Link href=\"/login\">Login here.</Link>\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","E:\\Code\\Projects\\Recruiter\\client\\pages\\resetpassword\\index.jsx",[],[],"E:\\Code\\Projects\\Recruiter\\client\\pages\\userpassword\\[id].jsx",[],[],"E:\\Code\\Projects\\Recruiter\\client\\pages\\_app.js",[],[],"E:\\Code\\Projects\\Recruiter\\client\\components\\EditProfile\\developer\\AddProject.jsx",[],[],"E:\\Code\\Projects\\Recruiter\\client\\components\\EditProfile\\developer\\DeleteAccount.jsx",[],[],"E:\\Code\\Projects\\Recruiter\\client\\components\\EditProfile\\developer\\LinksDetails.jsx",[],[],"E:\\Code\\Projects\\Recruiter\\client\\components\\EditProfile\\developer\\MyProjectsCard.jsx",[],[],"E:\\Code\\Projects\\Recruiter\\client\\components\\EditProfile\\developer\\PersonalDetails.jsx",[],[],"E:\\Code\\Projects\\Recruiter\\client\\components\\EditProfile\\developer\\SkillsDetails.jsx",["132","133"],[],"import { useState, useRef } from \"react\";\r\nimport Image from \"next/image\";\r\nimport mystyles from \"../styles/editProfile.module.scss\";\r\nimport plus from \"../../../public/assets/icons/plus.png\";\r\nimport { experienceList, listedCategories } from \"../../../data/Lists\";\r\n\r\nfunction SkillsDetails(props) {\r\n  const { experience, category, skills } = props.user;\r\n  const userExperience = useRef();\r\n  const fieldList = useRef();\r\n  const [userSkills, setSkills] = useState(skills);\r\n  const [typedSkill, setTypedSkill] = useState(\"\");\r\n  const [fieldlist, setFieldList] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState(category);\r\n  const [selectedExperience, setSelectedExperience] = useState(experience);\r\n  const [exlist, setExList] = useState(false);\r\n\r\n  function addSkill(e) {\r\n    e.preventDefault();\r\n    const str = typedSkill.trim();\r\n    if (str.length > 0) {\r\n      if (!userSkills.includes(typedSkill)) {\r\n        setSkills([...userSkills, typedSkill]);\r\n        setTypedSkill(\"\");\r\n      }\r\n    }\r\n    setTypedSkill(\"\");\r\n  }\r\n\r\n  function removeSkill(e) {\r\n    const skill = e.target.innerText;\r\n    setSkills(\r\n      userSkills.filter((item) => {\r\n        if (item != skill) {\r\n          return item;\r\n        }\r\n        return null;\r\n      })\r\n    );\r\n  }\r\n\r\n  function showFieldList() {\r\n    setFieldList(!fieldlist);\r\n  }\r\n\r\n  function addCategory(ev) {\r\n    setSelectedCategory(ev.target.innerText);\r\n    showFieldList();\r\n  }\r\n\r\n  function addExperience(ev) {\r\n    setSelectedExperience(ev.target.innerText);\r\n    showExList();\r\n  }\r\n\r\n  function showExList() {\r\n    setExList(!exlist);\r\n  }\r\n\r\n  function saveSkills(e) {\r\n    e.preventDefault();\r\n    const data = {\r\n      skills: userSkills,\r\n      experience: selectedExperience,\r\n      category: selectedCategory,\r\n    };\r\n\r\n    fetch(`${process.env.SERVER}/user/skillsedit/${props.user._id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"Application/json\",\r\n        \"recruiter-x-auth-token\": props.token,\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then(async (response) => {\r\n      const data = await response.json();\r\n      if (response.status == 200) {\r\n      } else {\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <form className={mystyles.form} action=\"submit\" onSubmit={saveSkills}>\r\n      <div className={mystyles.addField}>\r\n        <div onClick={showFieldList} className={mystyles.inner}>\r\n          {selectedCategory ? (\r\n            <p className={mystyles.selectedExperience}>{selectedCategory}</p>\r\n          ) : (\r\n            <p>\r\n              Cartegory <span>e.g 3 Web developer..</span>\r\n            </p>\r\n          )}\r\n          <Image src={plus} width={20} height={20} />\r\n        </div>\r\n        {fieldlist && (\r\n          <div ref={fieldList} className={mystyles.list}>\r\n            <ul>\r\n              {listedCategories.map((item, index) => {\r\n                return (\r\n                  <li key={index} onClick={addCategory}>\r\n                    {item}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={mystyles.addExperience}>\r\n        <div onClick={showExList} className={mystyles.inner}>\r\n          {selectedExperience ? (\r\n            <p className={mystyles.selectedExperience}>\r\n              Experience : {selectedExperience}\r\n            </p>\r\n          ) : (\r\n            <p>\r\n              Experience <span>e.g 3 Years..</span>\r\n            </p>\r\n          )}\r\n          <Image src={plus} width={20} height={20} />\r\n        </div>\r\n        {exlist && (\r\n          <div ref={userExperience} className={mystyles.list}>\r\n            <ul>\r\n              {experienceList.map((item, index) => {\r\n                return (\r\n                  <li key={index} onClick={addExperience}>\r\n                    {item}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={mystyles.addSkills}>\r\n        <div className={mystyles.skillInput}>\r\n          <input\r\n            placeholder=\"Type you skill e.g React\"\r\n            type=\"text\"\r\n            value={typedSkill}\r\n            onChange={(e) => {\r\n              setTypedSkill(e.target.value);\r\n            }}\r\n            name=\"\"\r\n            id=\"\"\r\n          />\r\n          <button onClick={addSkill} className={mystyles.addSkillsBtn}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className={mystyles.displaySkills}>\r\n        {userSkills &&\r\n          userSkills.map((item, index) => {\r\n            return (\r\n              <p onClick={removeSkill} key={index}>\r\n                {item}\r\n              </p>\r\n            );\r\n          })}\r\n      </div>\r\n      <button>Save</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SkillsDetails;\r\n","E:\\Code\\Projects\\Recruiter\\client\\components\\EditProfile\\recruiter\\RecruiterDetails.jsx",[],[],"E:\\Code\\Projects\\Recruiter\\client\\components\\Footer.jsx",[],[],"E:\\Code\\Projects\\Recruiter\\client\\components\\NavBar.jsx",["134","135"],[],"import styles from \"./styles/nav.module.scss\";\r\nimport avatar from \"../public/assets/icons/profileavatar.png\";\r\nimport logout from \"../public/assets/icons/logout.png\";\r\nimport settingsicon from \"../public/assets/icons/settings.png\";\r\nimport close from \"../public/assets/icons/closer.png\";\r\nimport emenu from \"../public/assets/icons/menu.png\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nfunction NavBar() {\r\n  const [logged, setLogged] = useState(false);\r\n  const [mounted, setMounted] = useState(false);\r\n  const [menu, setMenu] = useState(false);\r\n  const [details, setDetails] = useState();\r\n  const [themenu, setThemenu] = useState(emenu);\r\n  const [mobileMenuOpened, setMobileMenuOpened] = useState(false);\r\n  const mobileMenu = useRef(null);\r\n\r\n  const router = useRouter();\r\n\r\n  function settings() {\r\n    openMobileMenu();\r\n\r\n    setMenu(!menu);\r\n    if (details.user.type) {\r\n      if (details.user.type == \"Recruiter\") {\r\n        router.push(`/recruiterprofile`);\r\n        return;\r\n      } else {\r\n        router.push(`/developerprofile`);\r\n        return;\r\n      }\r\n    } else {\r\n    }\r\n  }\r\n\r\n  function logOut() {\r\n    localStorage.removeItem(\"recruiter-x-auth-token\");\r\n    openMobileMenu();\r\n    router.reload();\r\n    setMenu(!menu);\r\n  }\r\n\r\n  function showMenu() {\r\n    setMenu(!menu);\r\n  }\r\n\r\n  function openMobileMenu() {\r\n    if (mobileMenuOpened) {\r\n      mobileMenu.current.style.display = \"none\";\r\n      setMobileMenuOpened(false);\r\n      setThemenu(emenu);\r\n    } else {\r\n      mobileMenu.current.style.display = \"flex\";\r\n      setThemenu(close);\r\n      setMobileMenuOpened(true);\r\n    }\r\n  }\r\n\r\n  function goHome() {\r\n    mobileMenu.current.style.display = \"none\";\r\n    setMobileMenuOpened(false);\r\n    setThemenu(emenu);\r\n    router.push(\"/\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"recruiter-x-auth-token\");\r\n    const parsed = JSON.parse(token);\r\n    if (token) {\r\n      setDetails(parsed);\r\n      setLogged(true);\r\n      setMounted(true);\r\n    } else {\r\n      setMounted(true);\r\n      setLogged(false);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {mounted && (\r\n        <>\r\n          <div className={styles.pcNav}>\r\n            <Link href=\"/\">\r\n              <img src=\"assets/logo.png\" alt=\"Recruiter\" />\r\n            </Link>\r\n            <div className={styles.links}>\r\n              <Link href=\"/devs\">Find Developers</Link>\r\n              {!logged ? (\r\n                <>\r\n                  <Link href=\"/login\">Login</Link>\r\n                  <Link href=\"/register\">Register</Link>{\" \"}\r\n                </>\r\n              ) : (\r\n                <div className={styles.profile}>\r\n                  <div onClick={showMenu}>\r\n                    <Image src={avatar} alt=\"Profile\" width={30} height={30} />\r\n                  </div>\r\n                  {menu && (\r\n                    <div className={styles.miniNav}>\r\n                      <div onClick={settings} className={styles.icon}>\r\n                        <Image\r\n                          src={settingsicon}\r\n                          alt=\"setting\"\r\n                          width={25}\r\n                          height={25}\r\n                        />\r\n                        <p>Settings</p>\r\n                      </div>\r\n                      <div onClick={logOut} className={styles.icon}>\r\n                        <Image\r\n                          src={logout}\r\n                          alt=\"setting\"\r\n                          width={25}\r\n                          height={25}\r\n                        />\r\n                        <p>Logout</p>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className={styles.mobileNav}>\r\n            <div onClick={goHome}>\r\n              <img src=\"assets/logo.png\" alt=\"Recruiter\" />\r\n            </div>\r\n            <div className={styles.right}>\r\n              <div onClick={openMobileMenu} className={styles.humburger}>\r\n                <Image src={themenu} alt=\"menu\" width={30} height={30} />\r\n              </div>\r\n              <div ref={mobileMenu} className={styles.links}>\r\n                <p\r\n                  onClick={() => {\r\n                    router.push(\"/devs\");\r\n                    openMobileMenu();\r\n                  }}\r\n                >\r\n                  Find Developers\r\n                </p>\r\n                {!logged ? (\r\n                  <>\r\n                    <p\r\n                      onClick={() => {\r\n                        router.push(\"/login\");\r\n                        openMobileMenu();\r\n                      }}\r\n                    >\r\n                      Login\r\n                    </p>\r\n                    <p\r\n                      onClick={() => {\r\n                        router.push(\"/register\");\r\n                        openMobileMenu();\r\n                      }}\r\n                    >\r\n                      Register\r\n                    </p>\r\n                  </>\r\n                ) : (\r\n                  <div className={styles.miniNav}>\r\n                    <div onClick={settings} className={styles.icon}>\r\n                      <Image\r\n                        src={settingsicon}\r\n                        alt=\"setting\"\r\n                        width={25}\r\n                        height={25}\r\n                      />\r\n                      <p>Profile</p>\r\n                    </div>\r\n                    <div onClick={logOut} className={styles.icon}>\r\n                      <Image\r\n                        src={logout}\r\n                        alt=\"setting\"\r\n                        width={25}\r\n                        height={25}\r\n                      />\r\n                      <p>Logout</p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","E:\\Code\\Projects\\Recruiter\\client\\components\\ProfileCard.jsx",["136"],[],"import styles from \"./styles/profileCard.module.scss\";\r\nimport location from \"../public/assets/icons/location.png\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction ProfileCard(props) {\r\n  const [link, setLink] = useState(\"\");\r\n  const imglink = `/uploads/profilephotos/${props.photo}`;\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"recruiter-x-auth-token\");\r\n    if (token) {\r\n      setLink(`profile/${props.id}`);\r\n    } else {\r\n      setLink(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Link href={link}>\r\n      <main className={styles.container}>\r\n        <div className={styles.top}>\r\n          <section className={styles.profile}>\r\n            <div className={styles.image}>\r\n              <Image\r\n                width={50}\r\n                height={50}\r\n                src={imglink}\r\n                alt=\"\"\r\n                objectFit=\"cover\"\r\n              />\r\n            </div>\r\n            <div className={styles.name}>\r\n              <h3>{props.name}</h3>\r\n              <div className={styles.location}>\r\n                <Image src={location} alt=\"\" width={20} height={20} />\r\n                <p>{props.city + \", \" + props.country}</p>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className={styles.details}>\r\n            <h3>{props.category}</h3>\r\n            <p>{props.bio}</p>\r\n            <h4>\r\n              Experience: <span>{props.experience}</span>\r\n            </h4>\r\n          </section>\r\n        </div>\r\n        <div className={styles.skillsContainer}>\r\n          <h4>Skills</h4>\r\n          <ul className={styles.skills}>\r\n            {props.skills.map((item, key) => {\r\n              return <li key={key}>{item}</li>;\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </main>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default ProfileCard;\r\n","E:\\Code\\Projects\\Recruiter\\client\\components\\ProjectCard.jsx",[],[],{"ruleId":"137","severity":1,"message":"138","line":119,"column":6,"nodeType":"139","endLine":119,"endColumn":27,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"141","line":94,"column":6,"nodeType":"139","endLine":94,"endColumn":8,"suggestions":"142"},{"ruleId":"137","severity":1,"message":"143","line":106,"column":6,"nodeType":"139","endLine":106,"endColumn":8,"suggestions":"144"},{"ruleId":"137","severity":1,"message":"138","line":58,"column":6,"nodeType":"139","endLine":58,"endColumn":18,"suggestions":"145"},{"ruleId":"137","severity":1,"message":"138","line":60,"column":6,"nodeType":"139","endLine":60,"endColumn":27,"suggestions":"146"},{"ruleId":"137","severity":1,"message":"143","line":315,"column":6,"nodeType":"139","endLine":315,"endColumn":8,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":94,"column":11,"nodeType":"150","endLine":94,"endColumn":54},{"ruleId":"148","severity":1,"message":"149","line":121,"column":11,"nodeType":"150","endLine":121,"endColumn":54},{"ruleId":"151","severity":1,"message":"152","line":88,"column":15,"nodeType":"150","endLine":88,"endColumn":60},{"ruleId":"151","severity":1,"message":"152","line":130,"column":15,"nodeType":"150","endLine":130,"endColumn":60},{"ruleId":"137","severity":1,"message":"153","line":18,"column":6,"nodeType":"139","endLine":18,"endColumn":8,"suggestions":"154"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchingUser'. Either include it or remove the dependency array.","ArrayExpression",["155"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["156"],"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.",["157"],["158"],["159"],["160"],"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array. If 'setLink' needs the current value of 'props.id', you can also switch to useReducer instead of useState and read 'props.id' in the reducer.",["161"],{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"162","fix":"170"},{"desc":"166","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [id, router, closing, fetchingUser]",{"range":"174","text":"175"},"Update the dependencies array to be: [fetchUsers]",{"range":"176","text":"177"},"Update the dependencies array to be: [router]",{"range":"178","text":"179"},"Update the dependencies array to be: [fetchingUser, id, router]",{"range":"180","text":"181"},{"range":"182","text":"175"},{"range":"183","text":"179"},"Update the dependencies array to be: [props.id]",{"range":"184","text":"185"},[4108,4129],"[id, router, closing, fetchingUser]",[2366,2368],"[fetchUsers]",[3291,3293],"[router]",[1879,1891],"[fetchingUser, id, router]",[1867,1888],[9605,9607],[560,562],"[props.id]"]